name: deploy-application-client

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        description: "The environment to validate the application infrastructure for"
        required: true
        type: string
      STATIC_WEB_APP_NAME:
        description: 'The name of the static web app to deploy the client to'
        required: true
        type: string
      ENTRAID_AUTHORITY:
        description: "The Entra ID Authority URL to use for authentication"
        required: true
        type: string
      ENTRAID_DOMAIN:
        description: "The domain name of the Entra ID tenant"
        required: true
        type: string
      ENTRAID_CLIENT_ID_CLIENT:
        description: "The client ID that the WASM client will used to connect to the Entra ID to perform application authentication"
        required: true
        type: string
      ACCESS_API_URL:
        description: "The address of the access API to use for application authentication"
        required: true
        type: string
    secrets:
      AZURE_TENANT_ID:
        description: 'The Azure tenant ID'
        required: true
      AZURE_SUBSCRIPTION_ID:
        description: 'The Azure subscription ID'
        required: true
      AZURE_CLIENT_ID:
        description: 'The Azure client ID'
        required: true
      ENTRAID_TENANT_ID:
        description: "The Tenant ID of the Entra External ID CIAM tenant to use for the application"
        required: true
  
jobs:
  build-accessapi-container:
    name: Deploy client to static web app
    environment: ${{ inputs.ENVIRONMENT }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }} 

      - name: Update appsettings.json
        run: |
          # Update the EntraID.Authority settings in the appsettings.json file using jq command
          jq --arg authority "${{ inputs.ENTRAID_AUTHORITY }}" '.EntraId.Authority = $authority' src/GMCopilot/GMCopilot/wwwroot/appsettings.json > tmp.$$.json && mv tmp.$$.json src/GMCopilot/GMCopilot/wwwroot/appsettings.json
          jq --arg tenantid "${{ secrets.ENTRAID_TENANT_ID }}" '.EntraId.TenantId = $tenantid' src/GMCopilot/GMCopilot/wwwroot/appsettings.json > tmp.$$.json && mv tmp.$$.json src/GMCopilot/GMCopilot/wwwroot/appsettings.json
          jq --arg domain "${{ inputs.ENTRAID_DOMAIN }}" '.EntraId.Domain = $domain' src/GMCopilot/GMCopilot/wwwroot/appsettings.json > tmp.$$.json && mv tmp.$$.json src/GMCopilot/GMCopilot/wwwroot/appsettings.json
          jq --arg clientid "${{ inputs.ENTRAID_CLIENT_ID_CLIENT }}" '.EntraId.ClientId = $clientid' src/GMCopilot/GMCopilot/wwwroot/appsettings.json > tmp.$$.json && mv tmp.$$.json src/GMCopilot/GMCopilot/wwwroot/appsettings.json
          # Update the API settings in the appsettings.json file using jq command
          jq --arg accessapiurl "${{ inputs.ACCESS_API_URL }}" '.Apis.Access.BaseAddress = $accessapiurl' src/GMCopilot/GMCopilot/wwwroot/appsettings.json > tmp.$$.json && mv tmp.$$.json src/GMCopilot/GMCopilot/wwwroot/appsettings.json
          # Update the Logging settings in the appsettings.json file using jq command, setting Logging.LogLevel.Default to 'Warning'
          jq '.Logging.LogLevel.Default = "Warning"' src/GMCopilot/GMCopilot/wwwroot/appsettings.json > tmp.$$.json && mv tmp.$$.json src/GMCopilot/GMCopilot/wwwroot/appsettings.json
          # Output the appsettings.json file to the console
          cat src/GMCopilot/GMCopilot/wwwroot/appsettings.json

      - name: Get static web app token
        id: get-static-web-app-token
        run: |
          api_token=$(az staticwebapp secrets list --name ${{ inputs.STATIC_WEB_APP_NAME }} --resource-group ${{ vars.RESOURCE_GROUP_NAME }} | jq -r '.properties.apiKey')
          echo "api_token=$api_token" >> "$GITHUB_OUTPUT"
  
      - name: Build and publish
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ steps.get-static-web-app-token.outputs.api_token }}
          action: "upload"
          app_location: "src/GMCopilot/GMCopilot"
          output_location: "wwwroot"
          app_build_command: "dotnet publish -c Release -o bin"
